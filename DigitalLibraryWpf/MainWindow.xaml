<Window x:Class="DigitalLibraryWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DigitalLibraryWpf"
        xmlns:viewModels="clr-namespace:DigitalLibraryWpf.ViewModels"
        mc:Ignorable="d"
        Title="Digital Library Client" Height="600" Width="800">
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Server Configuration -->
        <GroupBox Header="API Configuration" Grid.Row="0" Margin="0,0,0,10">
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock Text="Server URL (e.g., http://localhost:9000):" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <TextBox Text="{Binding ServerUrl, UpdateSourceTrigger=PropertyChanged}" Width="250" Margin="0,0,5,0"/>
                    <Button Content="Apply URL" Command="{Binding ApplyServerUrlCommand}" Padding="5"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="5">
                    <TextBlock Text="Auth Token (Bearer):" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <TextBox Text="{Binding AuthToken, UpdateSourceTrigger=PropertyChanged}" Width="300"/>
                </StackPanel>
            </StackPanel>
        </GroupBox>
        
        <!-- Add Book Form -->
        <GroupBox Header="Add New Book" Grid.Row="1" Margin="0,0,0,10">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Text="Title:" VerticalAlignment="Center" Margin="5"/>
                    <TextBox Grid.Column="1" Text="{Binding NewBookTitle, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>

                    <TextBlock Grid.Column="2" Text="Author:" VerticalAlignment="Center" Margin="5"/>
                    <TextBox Grid.Column="3" Text="{Binding NewBookAuthor, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>

                    <TextBlock Grid.Column="4" Text="ISBN:" VerticalAlignment="Center" Margin="5"/>
                    <TextBox Grid.Column="5" Text="{Binding NewBookIsbn, UpdateSourceTrigger=PropertyChanged}" Margin="5"/>
                    
                    <Button Grid.Column="6" Content="Add Book" Command="{Binding AddBookCommand}" Margin="5" Padding="10,5"/>
                </Grid>
            </StackPanel>
        </GroupBox>

        <!-- Books List -->
        <GroupBox Header="Available Books" Grid.Row="2">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ListView ItemsSource="{Binding Books}" SelectedItem="{Binding SelectedBook}" Grid.Row="0" Margin="5" AlternationCount="2">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Style.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter Property="Background" Value="WhiteSmoke"></Setter>
                                </Trigger>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter Property="Background" Value="LightGray"></Setter>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="CornflowerBlue"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="ID" DisplayMemberBinding="{Binding Id}" Width="50"/>
                            <GridViewColumn Header="Title" DisplayMemberBinding="{Binding Title}" Width="200"/>
                            <GridViewColumn Header="Author" DisplayMemberBinding="{Binding Author}" Width="150"/>
                            <GridViewColumn Header="ISBN" DisplayMemberBinding="{Binding Isbn}" Width="120"/>
                            <GridViewColumn Header="Status" Width="250">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock>
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text" Value="Available"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsBorrowed}" Value="True">
                                                            <Setter Property="Text" Value="{Binding ConverterParameter='Borrowed by {0}, Due: {1}', Converter={StaticResource BookStatusConverter}}"/>
                                                            <Setter Property="Text">
                                                                <Setter.Value>
                                                                    <MultiBinding StringFormat="Borrowed by {0}, Due: {1}">
                                                                        <Binding Path="BorrowerUsername" FallbackValue="N/A"/>
                                                                        <Binding Path="DueDate" StringFormat='{}{0:yyyy-MM-dd}' FallbackValue="N/A"/>
                                                                    </MultiBinding>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="Foreground" Value="OrangeRed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                </ListView>
                <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                    <Button Content="Refresh Books" Command="{Binding LoadBooksCommand}" Margin="0,0,5,0" Padding="10,5"/>
                    <Button Content="Delete Selected Book" Command="{Binding DeleteBookCommand}" Padding="10,5"/>
                </StackPanel>
            </Grid>
        </GroupBox>
        
        <!-- Status Bar (Optional) -->
        <!--<StatusBar Grid.Row="3">
            <StatusBarItem>
                <TextBlock Text="{Binding Books.Count, StringFormat='{0} books loaded.'}"/>
            </StatusBarItem>
        </StatusBar>-->
    </Grid>
</Window>
